apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app.service.name }}
spec:
  type: {{ .Values.app.service.type }} #set to NodePort for ALB ingress
  ports:
   - port: {{ .Values.app.service.port }} # The port of the service
     targetPort: {{ .Values.app.service.targetPort }} # This is the actual port on which your application is running inside the container.
     nodePort: {{ .Values.app.service.nodePort }} # The port on the node it will recieve traffic from for the node has between 30000 - 32767
  selector:
    app: {{ .Values.app.selectorLabels.app }} #this is used to bind this service to the deployment (deployment-example.yml)
    tier: {{ .Values.app.selectorLabels.tier }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.deployment.name }}
  labels:
    app: {{ .Values.app.selectorLabels.app }} 
    tier: {{ .Values.app.selectorLabels.tier }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.app.selectorLabels.app }} 
      tier: {{ .Values.app.selectorLabels.tier }}
  replicas: {{ .Values.app.deployment.replicaCount }}
  template:
    metadata:
      name: {{ .Values.app.name }}
      labels:
        app: {{ .Values.app.selectorLabels.app }} 
        tier: {{ .Values.app.selectorLabels.tier }}
    spec:
      containers:
        - name: {{ .Values.app.containers.name }}
          image: {{ .Values.app.containers.image }}
          resources:
            limits:
              cpu: {{ .Values.app.containers.resource.limits.cpu }}
              memory: {{ .Values.app.containers.resource.limits.memory }}
            requests:
              cpu: {{ .Values.app.containers.resource.requests.cpu }}
              memory: {{ .Values.app.containers.resource.requests.memory }} 
          ports:
          - containerPort: {{ .Values.app.containers.ports.containerPort }}
            name: {{ .Values.app.containers.name }}
          envFrom:
          - configMapRef:
              name: {{ .Values.app.containers.env.configMapRef }}

